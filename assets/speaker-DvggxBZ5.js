import{m as a,n as p}from"./index-CHUspNL6.js";const r=/^(zh)-/,o=a(["hello, world"]),e=a({pitch:1,playing:!1,rate:1,spoken:0,voice:""}),i=a([]),d=p(()=>o.length-1),n=new SpeechSynthesisUtterance;speechSynthesis.onvoiceschanged!==void 0&&(speechSynthesis.onvoiceschanged=h);n.onend=()=>{e.spoken=(e.spoken+1)%o.length,e.playing=!1,y()};n.onerror=()=>{e.playing=!1};n.onpause=()=>{e.playing=!1};n.onresume=()=>{e.playing=!0};n.onstart=()=>{e.playing=!0};function h(){i.splice(0),speechSynthesis.getVoices().filter(s=>{r.test(s.lang)&&i.push(s),(e.voice?e.voice===s.name:s.default)&&(e.voice=s.name)})}function S(){speechSynthesis.pause()}function k(){speechSynthesis.cancel(),e.spoken=-1}function u(s){if(s){const c=s.target,t=Number(c.value);e.pitch=t}n.pitch=e.pitch}function l(s){if(s){const c=s.target,t=Number(c.value);e.rate=t}n.rate=e.rate}function f(){n.text=o[e.spoken]}function g(s){if(s){const t=s.target;e.voice=t.value}let c=i.find(t=>e.voice===t.name);c===void 0&&(c=i.find(t=>t.default)),n.voice=c}function y(){return speechSynthesis.paused?(speechSynthesis.resume(),n):speechSynthesis.speaking?(console.error("speechSynthesis.speaking"),n):(u(),l(),f(),g(),speechSynthesis.speak(n),n)}export{y as a,k as b,o as c,g as d,l as e,u as f,S as p,d as r,e as s,i as v};
